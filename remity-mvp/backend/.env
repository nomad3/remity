# --- Database ---
POSTGRES_USER=remityuser
POSTGRES_PASSWORD=remitypassword
POSTGRES_DB=remitydb
POSTGRES_HOST=db # Service name in docker-compose
POSTGRES_PORT=5432
# DATABASE_URL will be constructed automatically by config.py

# --- Redis ---
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
# REDIS_URL will be constructed automatically by config.py

# --- JWT ---
# IMPORTANT: Generate a strong, unique secret key for production!
# Use: openssl rand -hex 32
JWT_SECRET_KEY=09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7 # Example - REPLACE THIS
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# --- CORS ---
# Example for local development allowing React default port
BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://127.0.0.1:3000"]

# --- External API Keys (REPLACE with actual test keys) ---
STRIPE_SECRET_KEY=sk_test_YOUR_KEY_HERE
STRIPE_PUBLISHABLE_KEY=pk_test_YOUR_KEY_HERE
STRIPE_WEBHOOK_SECRET=whsec_YOUR_SECRET_HERE

BINANCE_API_KEY=YOUR_BINANCE_TEST_API_KEY_HERE
BINANCE_API_SECRET=YOUR_BINANCE_TEST_SECRET_HERE

KYC_PROVIDER_API_KEY=YOUR_KYC_PROVIDER_TEST_KEY_HERE
KYC_PROVIDER_WEBHOOK_SECRET=YOUR_KYC_PROVIDER_TEST_SECRET_HERE

OFFRAMP_PROVIDER_API_KEY=YOUR_OFFRAMP_PROVIDER_TEST_KEY_HERE
OFFRAMP_PROVIDER_WEBHOOK_SECRET=YOUR_OFFRAMP_PROVIDER_TEST_SECRET_HERE

# --- Application Settings ---
ENVIRONMENT=development
DEBUG=True

# --- GCP (Optional for local dev) ---
# GCP_PROJECT_ID=your-gcp-project-id
